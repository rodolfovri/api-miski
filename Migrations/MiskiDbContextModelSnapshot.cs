// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Miski.Infrastructure.Data;

#nullable disable

namespace Miski.Api.Migrations
{
    [DbContext(typeof(MiskiDbContext))]
    partial class MiskiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaPersona", b =>
                {
                    b.Property<int>("IdCategoriaPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaPersona"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoriaPersona");

                    b.ToTable("CategoriaPersona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("GuiaRemision")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdNegociacion")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VehiculoIdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdNegociacion");

                    b.HasIndex("VehiculoIdVehiculo");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculo", b =>
                {
                    b.Property<int>("IdCompraVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraVehiculo"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GuiaRemision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdCompraVehiculo");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("CompraVehiculo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.Property<int>("IdLlegadaPlanta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLlegadaPlanta"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FLlegada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdLlegadaPlanta");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdUsuario");

                    b.ToTable("LlegadaPlanta", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlantaDetalle", b =>
                {
                    b.Property<int>("IdLlegadaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLlegadaDetalle"));

                    b.Property<int>("IdLlegadaPlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdLote")
                        .HasColumnType("int");

                    b.Property<int>("IdProductoFinal")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PesoRecibido")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SacosRecibidos")
                        .HasColumnType("int");

                    b.HasKey("IdLlegadaDetalle");

                    b.HasIndex("IdLlegadaPlanta");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdProductoFinal");

                    b.ToTable("LlegadaPlantaDetalle", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Grado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("NumeroLote")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sacos")
                        .HasColumnType("int");

                    b.HasKey("IdLote");

                    b.HasIndex("IdCompra");

                    b.ToTable("Lote", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.Property<int>("IdNegociacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNegociacion"));

                    b.Property<int?>("AprobadaPor")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EstadoAprobado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoCalidadProducto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FotoDniFrontal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FotoDniPosterior")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdComisionista")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("NroCuentaRuc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PesoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SacosTotales")
                        .HasColumnType("int");

                    b.HasKey("IdNegociacion");

                    b.HasIndex("AprobadaPor");

                    b.HasIndex("IdComisionista");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Negociacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaCategoria", b =>
                {
                    b.Property<int>("IdPersonaCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaCategoria"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPersona");

                    b.ToTable("PersonaCategoria", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaUbicacion", b =>
                {
                    b.Property<int>("IdPersonaUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaUbicacion"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaUbicacion");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("PersonaUbicacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("PesoPorSaco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UnidadMedida")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdProducto");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPlataforma")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"));

                    b.Property<decimal?>("CantidadKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CantidadSacos")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdStock");

                    b.HasIndex("IdPlanta");

                    b.HasIndex("IdProducto");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"));

                    b.Property<int?>("LongitudMax")
                        .HasColumnType("int");

                    b.Property<int?>("LongitudMin")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TrackingPersona", b =>
                {
                    b.Property<int>("IdTracking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTracking"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasPrecision(10, 7)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasPrecision(10, 7)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTracking");

                    b.HasIndex("IdPersona");

                    b.ToTable("TrackingPersona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<decimal?>("Latitud")
                        .HasPrecision(10, 7)
                        .HasColumnType("decimal(10,7)");

                    b.Property<decimal?>("Longitud")
                        .HasPrecision(10, 7)
                        .HasColumnType("decimal(10,7)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUbicacion");

                    b.HasIndex("IdPersona");

                    b.ToTable("Ubicacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona")
                        .IsUnique()
                        .HasFilter("[IdPersona] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuarioRol"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculo"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Licencia")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdVehiculo");

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Negociacion", "Negociacion")
                        .WithMany("Compras")
                        .HasForeignKey("IdNegociacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Compra_Negociacion");

                    b.HasOne("Miski.Domain.Entities.Vehiculo", null)
                        .WithMany("Compras")
                        .HasForeignKey("VehiculoIdVehiculo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Negociacion");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculo", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("CompraVehiculos")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompraVehiculo_Compra");

                    b.HasOne("Miski.Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany("CompraVehiculos")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompraVehiculo_Vehiculo");

                    b.Navigation("Compra");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("LlegadasPlanta")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaPlanta_Compra");

                    b.HasOne("Miski.Domain.Entities.Persona", "Usuario")
                        .WithMany("LlegadasPlanta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaPlanta_Ingeniero");

                    b.Navigation("Compra");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlantaDetalle", b =>
                {
                    b.HasOne("Miski.Domain.Entities.LlegadaPlanta", "LlegadaPlanta")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdLlegadaPlanta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Llegada");

                    b.HasOne("Miski.Domain.Entities.Lote", "Lote")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdLote")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Lote");

                    b.HasOne("Miski.Domain.Entities.Producto", "ProductoFinal")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdProductoFinal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Producto");

                    b.Navigation("LlegadaPlanta");

                    b.Navigation("Lote");

                    b.Navigation("ProductoFinal");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("Lotes")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Lote_Compra");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "AprobadaPorPersona")
                        .WithMany("NegociacionesAprobadas")
                        .HasForeignKey("AprobadaPor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_AprobadaPor");

                    b.HasOne("Miski.Domain.Entities.Persona", "Comisionista")
                        .WithMany("NegociacionesComisionista")
                        .HasForeignKey("IdComisionista")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Negociacion_Comisionista");

                    b.HasOne("Miski.Domain.Entities.Producto", "Producto")
                        .WithMany("Negociaciones")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_Producto");

                    b.HasOne("Miski.Domain.Entities.Persona", "Proveedor")
                        .WithMany("NegociacionesProveedor")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_Proveedor");

                    b.Navigation("AprobadaPorPersona");

                    b.Navigation("Comisionista");

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.HasOne("Miski.Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Persona_TipoDocumento");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaCategoria", b =>
                {
                    b.HasOne("Miski.Domain.Entities.CategoriaPersona", "Categoria")
                        .WithMany("PersonaCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PersonaCategoria_Categoria");

                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("PersonaCategorias")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PersonaCategoria_Persona");

                    b.Navigation("Categoria");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaUbicacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("PersonaUbicaciones")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TU_Persona");

                    b.HasOne("Miski.Domain.Entities.Ubicacion", "Ubicacion")
                        .WithMany("PersonaUbicaciones")
                        .HasForeignKey("IdUbicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TU_Ubicacion");

                    b.Navigation("Persona");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Stock", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Ubicacion", "Planta")
                        .WithMany("Stocks")
                        .HasForeignKey("IdPlanta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Ubicacion");

                    b.HasOne("Miski.Domain.Entities.Producto", "Producto")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Producto");

                    b.Navigation("Planta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TrackingPersona", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("TrackingPersonas")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TrackingPersona_Persona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ubicacion_Persona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("Miski.Domain.Entities.Usuario", "IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Usuario_Persona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Rol");

                    b.HasOne("Miski.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Usuario");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaPersona", b =>
                {
                    b.Navigation("PersonaCategorias");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.Navigation("CompraVehiculos");

                    b.Navigation("LlegadasPlanta");

                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.Navigation("LlegadasPlanta");

                    b.Navigation("NegociacionesAprobadas");

                    b.Navigation("NegociacionesComisionista");

                    b.Navigation("NegociacionesProveedor");

                    b.Navigation("PersonaCategorias");

                    b.Navigation("PersonaUbicaciones");

                    b.Navigation("TrackingPersonas");

                    b.Navigation("Ubicaciones");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Producto", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");

                    b.Navigation("Negociaciones");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.Navigation("PersonaUbicaciones");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Vehiculo", b =>
                {
                    b.Navigation("CompraVehiculos");

                    b.Navigation("Compras");
                });
#pragma warning restore 612, 618
        }
    }
}
