// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Miski.Infrastructure.Data;

#nullable disable

namespace Miski.Api.Migrations
{
    [DbContext(typeof(MiskiDbContext))]
    [Migration("20251027045138_AgregarTablasMonedaTipoCambio")]
    partial class AgregarTablasMonedaTipoCambio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Miski.Domain.Entities.Banco", b =>
                {
                    b.Property<int>("IdBanco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBanco"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdBanco");

                    b.ToTable("Banco", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaPersona", b =>
                {
                    b.Property<int>("IdCategoriaPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaPersona"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoriaPersona");

                    b.ToTable("CategoriaPersona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoriaProducto");

                    b.ToTable("CategoriaProducto", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FEmision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("IGV")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdNegociacion")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Serie")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdCompra");

                    b.HasIndex("IdNegociacion");

                    b.ToTable("Compra", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculo", b =>
                {
                    b.Property<int>("IdCompraVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraVehiculo"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GuiaRemision")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdCompraVehiculo");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("CompraVehiculo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculoDetalle", b =>
                {
                    b.Property<int>("IdCompraVehiculoDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraVehiculoDetalle"));

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdCompraVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdCompraVehiculoDetalle");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdCompraVehiculo");

                    b.ToTable("CompraVehiculoDetalle", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.Property<int>("IdLlegadaPlanta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLlegadaPlanta"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FLlegada")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdLlegadaPlanta");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdUsuario");

                    b.ToTable("LlegadaPlanta", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlantaDetalle", b =>
                {
                    b.Property<int>("IdLlegadaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLlegadaDetalle"));

                    b.Property<int>("IdLlegadaPlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdLote")
                        .HasColumnType("int");

                    b.Property<int>("IdProductoFinal")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("PesoRecibido")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SacosRecibidos")
                        .HasColumnType("int");

                    b.HasKey("IdLlegadaDetalle");

                    b.HasIndex("IdLlegadaPlanta");

                    b.HasIndex("IdLote");

                    b.HasIndex("IdProductoFinal");

                    b.ToTable("LlegadaPlantaDetalle", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.Property<int>("IdLote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLote"));

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Grado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sacos")
                        .HasColumnType("int");

                    b.HasKey("IdLote");

                    b.HasIndex("IdCompra");

                    b.ToTable("Lote", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Modulo", b =>
                {
                    b.Property<int>("IdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModulo"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("TipoPlataforma")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdModulo");

                    b.ToTable("Modulo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Moneda", b =>
                {
                    b.Property<int>("IdMoneda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoneda"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdMoneda");

                    b.ToTable("Moneda", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.Property<int>("IdNegociacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNegociacion"));

                    b.Property<int?>("AprobadaPorContadora")
                        .HasColumnType("int");

                    b.Property<int?>("AprobadaPorIngeniero")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EstadoAprobacionContadora")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EstadoAprobacionIngeniero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EvidenciaVideo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FAdelanto")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FAprobacionContadora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FAprobacionIngeniero")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FPagoTotal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FRechazoContadora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FRechazoIngeniero")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FotoDniFrontal")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FotoDniPosterior")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IdBanco")
                        .HasColumnType("int");

                    b.Property<int>("IdComisionista")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("IdVariedadProducto")
                        .HasColumnType("int");

                    b.Property<decimal?>("MontoAdelanto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoTotalPago")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NroCuentaBancaria")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NroDocumentoProveedor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("PesoPorSaco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PesoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimeraEvidenciaFoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProveedorIdPersona")
                        .HasColumnType("int");

                    b.Property<int?>("RechazadoPorContadora")
                        .HasColumnType("int");

                    b.Property<int?>("RechazadoPorIngeniero")
                        .HasColumnType("int");

                    b.Property<int?>("SacosTotales")
                        .HasColumnType("int");

                    b.Property<string>("SegundaEvidenciaFoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TerceraEvidenciaFoto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TipoCalidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdNegociacion");

                    b.HasIndex("AprobadaPorContadora");

                    b.HasIndex("AprobadaPorIngeniero");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdComisionista");

                    b.HasIndex("IdTipoDocumento");

                    b.HasIndex("IdVariedadProducto");

                    b.HasIndex("ProveedorIdPersona");

                    b.HasIndex("RechazadoPorContadora");

                    b.HasIndex("RechazadoPorIngeniero");

                    b.ToTable("Negociacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.PermisoRol", b =>
                {
                    b.Property<int>("IdPermisoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPermisoRol"));

                    b.Property<int?>("IdModulo")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubModulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdSubModuloDetalle")
                        .HasColumnType("int");

                    b.Property<bool>("TieneAcceso")
                        .HasColumnType("bit");

                    b.HasKey("IdPermisoRol");

                    b.HasIndex("IdModulo");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdSubModulo");

                    b.HasIndex("IdSubModuloDetalle");

                    b.ToTable("PermisoRol", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdTipoDocumento")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdTipoDocumento");

                    b.ToTable("Persona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaCategoria", b =>
                {
                    b.Property<int>("IdPersonaCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaCategoria"));

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaCategoria");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdPersona");

                    b.ToTable("PersonaCategoria", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaUbicacion", b =>
                {
                    b.Property<int>("IdPersonaUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersonaUbicacion"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.HasKey("IdPersonaUbicacion");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUbicacion");

                    b.ToTable("PersonaUbicacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FichaTecnica")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdCategoriaProducto")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoriaProducto");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPlataforma")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Stock", b =>
                {
                    b.Property<int>("IdStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStock"));

                    b.Property<decimal?>("CantidadKg")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CantidadSacos")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanta")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.HasKey("IdStock");

                    b.HasIndex("IdPlanta");

                    b.HasIndex("IdProducto");

                    b.ToTable("Stock", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModulo", b =>
                {
                    b.Property<int>("IdSubModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubModulo"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdModulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("IdSubModulo");

                    b.HasIndex("IdModulo");

                    b.ToTable("SubModulo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModuloDetalle", b =>
                {
                    b.Property<int>("IdSubModuloDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubModuloDetalle"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdSubModulo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("IdSubModuloDetalle");

                    b.HasIndex("IdSubModulo");

                    b.ToTable("SubModuloDetalle", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoCalidadProducto", b =>
                {
                    b.Property<int>("IdTipoCalidadProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCalidadProducto"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoCalidadProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("TipoCalidadProducto", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoCambio", b =>
                {
                    b.Property<int>("IdTipoCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCambio"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdMoneda")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorCompra")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ValorVenta")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdTipoCambio");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TipoCambio", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("IdTipoDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDocumento"));

                    b.Property<int?>("LongitudMax")
                        .HasColumnType("int");

                    b.Property<int?>("LongitudMin")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdTipoDocumento");

                    b.ToTable("TipoDocumento", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.TrackingPersona", b =>
                {
                    b.Property<int>("IdTracking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTracking"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Latitud")
                        .IsRequired()
                        .HasPrecision(10, 7)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitud")
                        .IsRequired()
                        .HasPrecision(10, 7)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTracking");

                    b.HasIndex("IdPersona");

                    b.ToTable("TrackingPersona", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("CodigoSenasa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComprobantePdf")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DomicilioLegal")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GiroEstablecimiento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroRuc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUbicacion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Ubicacion", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.UnidadMedida", b =>
                {
                    b.Property<int>("IdUnidadMedida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUnidadMedida"));

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdUnidadMedida");

                    b.ToTable("UnidadMedida", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varbinary(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona")
                        .IsUnique()
                        .HasFilter("[IdPersona] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("IdUsuarioRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuarioRol"));

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdUsuarioRol");

                    b.HasIndex("IdRol");

                    b.HasIndex("IdUsuario");

                    b.ToTable("UsuarioRol", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.VariedadProducto", b =>
                {
                    b.Property<int>("IdVariedadProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVariedadProducto"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FichaTecnica")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadMedida")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdVariedadProducto");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("VariedadProducto", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculo"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdVehiculo");

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Negociacion", "Negociacion")
                        .WithMany("Compras")
                        .HasForeignKey("IdNegociacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Compra_Negociacion");

                    b.Navigation("Negociacion");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculo", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Vehiculo", "Vehiculo")
                        .WithMany("CompraVehiculos")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompraVehiculo_Vehiculo");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculoDetalle", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("CompraVehiculoDetalles")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompraVehiculoDetalle_Compra");

                    b.HasOne("Miski.Domain.Entities.CompraVehiculo", "CompraVehiculo")
                        .WithMany("CompraVehiculoDetalles")
                        .HasForeignKey("IdCompraVehiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CompraVehiculoDetalle_CompraVehiculo");

                    b.Navigation("Compra");

                    b.Navigation("CompraVehiculo");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("LlegadasPlanta")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaPlanta_Compra");

                    b.HasOne("Miski.Domain.Entities.Persona", "Usuario")
                        .WithMany("LlegadasPlanta")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaPlanta_Ingeniero");

                    b.Navigation("Compra");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlantaDetalle", b =>
                {
                    b.HasOne("Miski.Domain.Entities.LlegadaPlanta", "LlegadaPlanta")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdLlegadaPlanta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Llegada");

                    b.HasOne("Miski.Domain.Entities.Lote", "Lote")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdLote")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Lote");

                    b.HasOne("Miski.Domain.Entities.Producto", "ProductoFinal")
                        .WithMany("LlegadaPlantaDetalles")
                        .HasForeignKey("IdProductoFinal")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_LlegadaDetalle_Producto");

                    b.Navigation("LlegadaPlanta");

                    b.Navigation("Lote");

                    b.Navigation("ProductoFinal");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Compra", "Compra")
                        .WithMany("Lotes")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Lote_Compra");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Usuario", "AprobadaPorUsuarioContadora")
                        .WithMany()
                        .HasForeignKey("AprobadaPorContadora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_AprobadaPorContadora");

                    b.HasOne("Miski.Domain.Entities.Usuario", "AprobadaPorUsuarioIngeniero")
                        .WithMany()
                        .HasForeignKey("AprobadaPorIngeniero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_AprobadaPorIngeniero");

                    b.HasOne("Miski.Domain.Entities.Banco", "Banco")
                        .WithMany("Negociaciones")
                        .HasForeignKey("IdBanco")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_Banco");

                    b.HasOne("Miski.Domain.Entities.Persona", "Comisionista")
                        .WithMany("NegociacionesComisionista")
                        .HasForeignKey("IdComisionista")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Negociacion_Comisionista");

                    b.HasOne("Miski.Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Negociaciones")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_TipoDocumento");

                    b.HasOne("Miski.Domain.Entities.VariedadProducto", "VariedadProducto")
                        .WithMany("Negociaciones")
                        .HasForeignKey("IdVariedadProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_VariedadProducto");

                    b.HasOne("Miski.Domain.Entities.Persona", "Proveedor")
                        .WithMany("NegociacionesProveedor")
                        .HasForeignKey("ProveedorIdPersona");

                    b.HasOne("Miski.Domain.Entities.Usuario", "RechazadoPorUsuarioContadora")
                        .WithMany()
                        .HasForeignKey("RechazadoPorContadora")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_RechazadoPorContadora");

                    b.HasOne("Miski.Domain.Entities.Usuario", "RechazadoPorUsuarioIngeniero")
                        .WithMany()
                        .HasForeignKey("RechazadoPorIngeniero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Negociacion_RechazadoPorIngeniero");

                    b.Navigation("AprobadaPorUsuarioContadora");

                    b.Navigation("AprobadaPorUsuarioIngeniero");

                    b.Navigation("Banco");

                    b.Navigation("Comisionista");

                    b.Navigation("Proveedor");

                    b.Navigation("RechazadoPorUsuarioContadora");

                    b.Navigation("RechazadoPorUsuarioIngeniero");

                    b.Navigation("TipoDocumento");

                    b.Navigation("VariedadProducto");
                });

            modelBuilder.Entity("Miski.Domain.Entities.PermisoRol", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Modulo", "Modulo")
                        .WithMany("PermisoRoles")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_PermisoRol_Modulo");

                    b.HasOne("Miski.Domain.Entities.Rol", "Rol")
                        .WithMany("PermisoRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PermisoRol_Rol");

                    b.HasOne("Miski.Domain.Entities.SubModulo", "SubModulo")
                        .WithMany("PermisoRoles")
                        .HasForeignKey("IdSubModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_PermisoRol_SubModulo");

                    b.HasOne("Miski.Domain.Entities.SubModuloDetalle", "SubModuloDetalle")
                        .WithMany("PermisoRoles")
                        .HasForeignKey("IdSubModuloDetalle")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_PermisoRol_SubModuloDetalle");

                    b.Navigation("Modulo");

                    b.Navigation("Rol");

                    b.Navigation("SubModulo");

                    b.Navigation("SubModuloDetalle");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.HasOne("Miski.Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoDocumento")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Persona_TipoDocumento");

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaCategoria", b =>
                {
                    b.HasOne("Miski.Domain.Entities.CategoriaPersona", "Categoria")
                        .WithMany("PersonaCategorias")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PersonaCategoria_Categoria");

                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("PersonaCategorias")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_PersonaCategoria_Persona");

                    b.Navigation("Categoria");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.PersonaUbicacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("PersonaUbicaciones")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TU_Persona");

                    b.HasOne("Miski.Domain.Entities.Ubicacion", "Ubicacion")
                        .WithMany("PersonaUbicaciones")
                        .HasForeignKey("IdUbicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TU_Ubicacion");

                    b.Navigation("Persona");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Producto", b =>
                {
                    b.HasOne("Miski.Domain.Entities.CategoriaProducto", "CategoriaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Producto_CategoriaProducto");

                    b.Navigation("CategoriaProducto");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Stock", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Ubicacion", "Planta")
                        .WithMany("Stocks")
                        .HasForeignKey("IdPlanta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Ubicacion");

                    b.HasOne("Miski.Domain.Entities.Producto", "Producto")
                        .WithMany("Stocks")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Stock_Producto");

                    b.Navigation("Planta");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModulo", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Modulo", "Modulo")
                        .WithMany("SubModulos")
                        .HasForeignKey("IdModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SubModulo_Modulo");

                    b.Navigation("Modulo");
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModuloDetalle", b =>
                {
                    b.HasOne("Miski.Domain.Entities.SubModulo", "SubModulo")
                        .WithMany("SubModuloDetalles")
                        .HasForeignKey("IdSubModulo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SubModuloDetalle_SubModulo");

                    b.Navigation("SubModulo");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoCalidadProducto", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Producto", "Producto")
                        .WithMany("TipoCalidadProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TipoCalidadProducto_Producto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoCambio", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Moneda", "Moneda")
                        .WithMany("TipoCambios")
                        .HasForeignKey("IdMoneda")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TipoCambio_Moneda");

                    b.HasOne("Miski.Domain.Entities.Usuario", "Usuario")
                        .WithMany("TipoCambios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TipoCambio_Usuario");

                    b.Navigation("Moneda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TrackingPersona", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithMany("TrackingPersonas")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TrackingPersona_Persona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Ubicacion_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("Miski.Domain.Entities.Usuario", "IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_Usuario_Persona");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Miski.Domain.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Rol");

                    b.HasOne("Miski.Domain.Entities.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioRol_Usuario");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.VariedadProducto", b =>
                {
                    b.HasOne("Miski.Domain.Entities.Producto", "Producto")
                        .WithMany("VariedadProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_VariedadProducto_Producto");

                    b.HasOne("Miski.Domain.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany("VariedadProductos")
                        .HasForeignKey("IdUnidadMedida")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_VariedadProducto_UnidadMedida");

                    b.Navigation("Producto");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Banco", b =>
                {
                    b.Navigation("Negociaciones");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaPersona", b =>
                {
                    b.Navigation("PersonaCategorias");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Compra", b =>
                {
                    b.Navigation("CompraVehiculoDetalles");

                    b.Navigation("LlegadasPlanta");

                    b.Navigation("Lotes");
                });

            modelBuilder.Entity("Miski.Domain.Entities.CompraVehiculo", b =>
                {
                    b.Navigation("CompraVehiculoDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.LlegadaPlanta", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Lote", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Modulo", b =>
                {
                    b.Navigation("PermisoRoles");

                    b.Navigation("SubModulos");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Moneda", b =>
                {
                    b.Navigation("TipoCambios");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Negociacion", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Persona", b =>
                {
                    b.Navigation("LlegadasPlanta");

                    b.Navigation("NegociacionesComisionista");

                    b.Navigation("NegociacionesProveedor");

                    b.Navigation("PersonaCategorias");

                    b.Navigation("PersonaUbicaciones");

                    b.Navigation("TrackingPersonas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Producto", b =>
                {
                    b.Navigation("LlegadaPlantaDetalles");

                    b.Navigation("Stocks");

                    b.Navigation("TipoCalidadProductos");

                    b.Navigation("VariedadProductos");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Rol", b =>
                {
                    b.Navigation("PermisoRoles");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModulo", b =>
                {
                    b.Navigation("PermisoRoles");

                    b.Navigation("SubModuloDetalles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.SubModuloDetalle", b =>
                {
                    b.Navigation("PermisoRoles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Negociaciones");

                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Ubicacion", b =>
                {
                    b.Navigation("PersonaUbicaciones");

                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("Miski.Domain.Entities.UnidadMedida", b =>
                {
                    b.Navigation("VariedadProductos");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("TipoCambios");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("Miski.Domain.Entities.VariedadProducto", b =>
                {
                    b.Navigation("Negociaciones");
                });

            modelBuilder.Entity("Miski.Domain.Entities.Vehiculo", b =>
                {
                    b.Navigation("CompraVehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
