namespace Miski.Shared.DTOs.Auth;

public class AuthResponseDto
{
    public int IdUsuario { get; set; }
    public string Username { get; set; } = string.Empty;
    public string Token { get; set; } = string.Empty;
    public DateTime Expiration { get; set; }
    public PersonaDto? Persona { get; set; }
    public List<RolDto> Roles { get; set; } = new List<RolDto>();
}

public class RolDto : IEquatable<RolDto>
{
    public int IdRol { get; set; }
    public string Nombre { get; set; } = string.Empty;
    public string? Descripcion { get; set; }
    public string? TipoPlataforma { get; set; }
    public List<RolPermisoDto> Permisos { get; set; } = new List<RolPermisoDto>();

    // Implementación de IEquatable para Distinct()
    public bool Equals(RolDto? other)
    {
        if (other is null) return false;
        if (ReferenceEquals(this, other)) return true;
        return IdRol == other.IdRol;
    }

    public override bool Equals(object? obj)
    {
        return Equals(obj as RolDto);
    }

    public override int GetHashCode()
    {
        return IdRol.GetHashCode();
    }
}

public class RolPermisoDto
{
    public int? IdModulo { get; set; }
    public string? ModuloNombre { get; set; }
    public int? IdSubModulo { get; set; }
    public string? SubModuloNombre { get; set; }
    public int? IdSubModuloDetalle { get; set; }
    public string? SubModuloDetalleNombre { get; set; }
    public bool TieneAcceso { get; set; }
}

public class PersonaDto
{
    public int IdPersona { get; set; }
    public string Nombres { get; set; } = string.Empty;
    public string Apellidos { get; set; } = string.Empty;
    public string NombreCompleto { get; set; } = string.Empty;
    public string? Email { get; set; }
    public string? Telefono { get; set; }
    public string NumeroDocumento { get; set; } = string.Empty;
    public string TipoDocumentoNombre { get; set; } = string.Empty;
}