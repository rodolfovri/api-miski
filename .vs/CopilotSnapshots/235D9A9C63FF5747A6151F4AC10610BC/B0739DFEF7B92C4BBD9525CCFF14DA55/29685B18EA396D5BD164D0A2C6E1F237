using MediatR;
using Miski.Domain.Contracts;
using Miski.Domain.Entities;
using Miski.Shared.Exceptions;

namespace Miski.Application.Features.Maestros.CategoriaProducto.Commands.DeleteCategoria;

public class DeleteCategoriaProductoHandler : IRequestHandler<DeleteCategoriaProductoCommand, bool>
{
    private readonly IUnitOfWork _unitOfWork;

    public DeleteCategoriaProductoHandler(IUnitOfWork unitOfWork)
    {
        _unitOfWork = unitOfWork;
    }

    public async Task<bool> Handle(DeleteCategoriaProductoCommand request, CancellationToken cancellationToken)
    {
        var categoria = await _unitOfWork.Repository<Domain.Entities.CategoriaProducto>()
            .GetByIdAsync(request.Id, cancellationToken);

        if (categoria == null)
            throw new NotFoundException("CategoriaProducto", request.Id);

        // Cambiar estado a INACTIVO en lugar de eliminar físicamente
        // Los productos existentes mantienen su referencia a esta categoría
        categoria.Estado = "INACTIVO";
        await _unitOfWork.SaveChangesAsync(cancellationToken);

        return true;
    }
}